server.port=8089
spring.jpa.show-sql=true
spring.datasource.url=jdbc:mysql://localhost:3306/paymybuddy?createDatabaseIfNotExist=true
spring.datasource.username=rootName 
spring.datasource.password=passwored
spring.jpa.hibernate.ddl-auto=update
#?createDatabaseIfNotExist=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

#permet de voir dans la console le port utilisé par Tomcat au démarrage.
logging.level.org.springframework.boot.web.embedded.tomcat=info

spring.security.oauth2.client.registration.google.client-id=googleId  
spring.security.oauth2.client.registration.google.client-secret=googelSecret
spring.security.oauth2.client.registration.google.scope=email,profile

spring.jpa.generate-ddl=true
spring.jpa.defer-datasource-initialization=true
#Properité, Hibernate n'envoie pas la requête SQL d'insertion à la base de données, avec l'annotation @Column(nullable=false)
spring.jpa.properties.hibernate.check_nullability=true
logging.level.com.openclassrooms.pay_my_buddy=info
logging.level.com.openclassrooms.pay_my_buddy.controller=debug
logging.level.com.openclassrooms.pay_my_buddy.service=debug
#thymeleaf utilise aussi cache, quand on demande une page, thymeleaf donne la page dans le cache
spring.thymeleaf.cache=false

